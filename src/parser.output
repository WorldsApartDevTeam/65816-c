Terminals unused in grammar

   LONG
   SHORT
   CHAR
   FLOAT
   DOUBLE
   _BOOL
   VOID
   STRUCT
   TYPEDEF
   UNION
   SIGNED
   UNSIGNED
   STATIC
   AUTO
   VOLATILE
   _ATOMIC
   EXTERN
   CONST
   RESTRICT
   REGISTER
   IF
   ELSE
   WHILE
   DO
   FOR
   SWITCH
   CASE
   DEFAULT
   LABEL
   GOTO
   BREAK
   CONTINUE
   SIZEOF
   INC
   DEC
   INDIRECT
   DOTDOTDOT
   MUL_EQ
   DIV_EQ
   MOD_EQ
   ADD_EQ
   SUB_EQ
   SHL_EQ
   SHR_EQ
   AND_EQ
   XOR_EQ
   OR_EQ
   STATEMENT
   COMPOUND
   FUNCTION
   BLOCKLIST
   DECLARATION
   DECLARATOR
   DECLARATOR_LIST
   INIT_EXPRESSION
   NEGATE


State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: INT ID '(' ')' compound_statement

    6 compound_statement: '{' '}'
    7                   | '{' block_item_list '}'

    8 block_item_list: block_item
    9                | block_item_list block_item

   10 block_item: declaration
   11           | statement

   12 declaration: declaration_specifiers init_declarator_list ';'

   13 declaration_specifiers: type_qualifier

   14 type_qualifier: INT

   15 init_declarator_list: init_declarator
   16                     | init_declarator_list ',' init_declarator

   17 init_declarator: declarator
   18                | declarator '=' initializer

   19 declarator: direct_declarator

   20 direct_declarator: ID
   21                  | '(' declarator ')'

   22 initializer: assignment_expression

   23 statement: jump_statement
   24          | compound_statement

   25 jump_statement: RETURN expression ';'

   26 expression: assignment_expression
   27           | expression ',' assignment_expression

   28 assignment_expression: conditional_expression

   29 conditional_expression: logical_or_expression
   30                       | logical_or_expression '?' expression ':' conditional_expression

   31 logical_or_expression: logical_and_expression
   32                      | logical_or_expression LOR logical_and_expression

   33 logical_and_expression: inclusive_or_expression
   34                       | logical_and_expression LAND inclusive_or_expression

   35 inclusive_or_expression: exclusive_or_expression
   36                        | inclusive_or_expression '|' exclusive_or_expression

   37 exclusive_or_expression: and_expression
   38                        | exclusive_or_expression '^' and_expression

   39 and_expression: equality_expression
   40               | and_expression '&' equality_expression

   41 equality_expression: relational_expression
   42                    | equality_expression EQ relational_expression
   43                    | equality_expression NE relational_expression

   44 relational_expression: shift_expression
   45                      | relational_expression '<' shift_expression
   46                      | relational_expression '>' shift_expression
   47                      | relational_expression LE shift_expression
   48                      | relational_expression GE shift_expression

   49 shift_expression: additive_expression
   50                 | shift_expression SHL additive_expression
   51                 | shift_expression SHR additive_expression

   52 additive_expression: multiplicative_expression
   53                    | additive_expression '+' multiplicative_expression
   54                    | additive_expression '-' multiplicative_expression

   55 multiplicative_expression: unary_expression
   56                          | multiplicative_expression '*' unary_expression
   57                          | multiplicative_expression '/' unary_expression
   58                          | multiplicative_expression '%' unary_expression

   59 cast_expression: unary_expression

   60 unary_expression: postfix_expression
   61                 | '+' cast_expression
   62                 | '-' cast_expression
   63                 | '~' cast_expression
   64                 | '!' cast_expression

   65 postfix_expression: primary_expression

   66 primary_expression: ICONSTANT
   67                   | '(' expression ')'
   68                   | ID


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'%' (37) 58
'&' (38) 40
'(' (40) 5 21 67
')' (41) 5 21 67
'*' (42) 56
'+' (43) 53 61
',' (44) 16 27
'-' (45) 54 62
'/' (47) 57
':' (58) 30
';' (59) 12 25
'<' (60) 45
'=' (61) 18
'>' (62) 46
'?' (63) 30
'^' (94) 38
'{' (123) 6 7
'|' (124) 36
'}' (125) 6 7
'~' (126) 63
error (256)
INT (258) 5 14
LONG (259)
SHORT (260)
CHAR (261)
FLOAT (262)
DOUBLE (263)
_BOOL (264)
VOID (265)
STRUCT (266)
TYPEDEF (267)
UNION (268)
SIGNED (269)
UNSIGNED (270)
STATIC (271)
AUTO (272)
VOLATILE (273)
_ATOMIC (274)
EXTERN (275)
CONST (276)
RESTRICT (277)
REGISTER (278)
IF (279)
ELSE (280)
WHILE (281)
DO (282)
FOR (283)
SWITCH (284)
CASE (285)
DEFAULT (286)
LABEL (287)
RETURN (288) 25
GOTO (289)
BREAK (290)
CONTINUE (291)
SHL (292) 50
SHR (293) 51
LE (294) 47
GE (295) 48
NE (296) 43
EQ (297) 42
LOR (298) 32
LAND (299) 34
SIZEOF (300)
INC (301)
DEC (302)
INDIRECT (303)
DOTDOTDOT (304)
MUL_EQ (305)
DIV_EQ (306)
MOD_EQ (307)
ADD_EQ (308)
SUB_EQ (309)
SHL_EQ (310)
SHR_EQ (311)
AND_EQ (312)
XOR_EQ (313)
OR_EQ (314)
STATEMENT (315)
COMPOUND (316)
FUNCTION (317)
BLOCKLIST (318)
DECLARATION (319)
DECLARATOR (320)
DECLARATOR_LIST (321)
INIT_EXPRESSION (322)
NEGATE (323)
ICONSTANT (324) 66
ID (325) 5 20 68


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
translation_unit (93)
    on left: 1 2, on right: 0 2
external_declaration (94)
    on left: 3 4, on right: 1 2
function_definition (95)
    on left: 5, on right: 3
compound_statement (96)
    on left: 6 7, on right: 5 24
block_item_list (97)
    on left: 8 9, on right: 7 9
block_item (98)
    on left: 10 11, on right: 8 9
declaration (99)
    on left: 12, on right: 4 10
declaration_specifiers (100)
    on left: 13, on right: 12
type_qualifier (101)
    on left: 14, on right: 13
init_declarator_list (102)
    on left: 15 16, on right: 12 16
init_declarator (103)
    on left: 17 18, on right: 15 16
declarator (104)
    on left: 19, on right: 17 18 21
direct_declarator (105)
    on left: 20 21, on right: 19
initializer (106)
    on left: 22, on right: 18
statement (107)
    on left: 23 24, on right: 11
jump_statement (108)
    on left: 25, on right: 23
expression (109)
    on left: 26 27, on right: 25 27 30 67
assignment_expression (110)
    on left: 28, on right: 22 26 27
conditional_expression (111)
    on left: 29 30, on right: 28 30
logical_or_expression (112)
    on left: 31 32, on right: 29 30 32
logical_and_expression (113)
    on left: 33 34, on right: 31 32 34
inclusive_or_expression (114)
    on left: 35 36, on right: 33 34 36
exclusive_or_expression (115)
    on left: 37 38, on right: 35 36 38
and_expression (116)
    on left: 39 40, on right: 37 38 40
equality_expression (117)
    on left: 41 42 43, on right: 39 40 42 43
relational_expression (118)
    on left: 44 45 46 47 48, on right: 41 42 43 45 46 47 48
shift_expression (119)
    on left: 49 50 51, on right: 44 45 46 47 48 50 51
additive_expression (120)
    on left: 52 53 54, on right: 49 50 51 53 54
multiplicative_expression (121)
    on left: 55 56 57 58, on right: 52 53 54 56 57 58
cast_expression (122)
    on left: 59, on right: 61 62 63 64
unary_expression (123)
    on left: 60 61 62 63 64, on right: 55 56 57 58 59
postfix_expression (124)
    on left: 65, on right: 60
primary_expression (125)
    on left: 66 67 68, on right: 65


State 0

    0 $accept: . translation_unit $end

    INT  shift, and go to state 1

    translation_unit        go to state 2
    external_declaration    go to state 3
    function_definition     go to state 4
    declaration             go to state 5
    declaration_specifiers  go to state 6
    type_qualifier          go to state 7


State 1

    5 function_definition: INT . ID '(' ')' compound_statement
   14 type_qualifier: INT .

    ID  shift, and go to state 8

    ID        [reduce using rule 14 (type_qualifier)]
    $default  reduce using rule 14 (type_qualifier)


State 2

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end  shift, and go to state 9
    INT   shift, and go to state 1

    external_declaration    go to state 10
    function_definition     go to state 4
    declaration             go to state 5
    declaration_specifiers  go to state 6
    type_qualifier          go to state 7


State 3

    1 translation_unit: external_declaration .

    $default  reduce using rule 1 (translation_unit)


State 4

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


State 5

    4 external_declaration: declaration .

    $default  reduce using rule 4 (external_declaration)


State 6

   12 declaration: declaration_specifiers . init_declarator_list ';'

    ID   shift, and go to state 11
    '('  shift, and go to state 12

    init_declarator_list  go to state 13
    init_declarator       go to state 14
    declarator            go to state 15
    direct_declarator     go to state 16


State 7

   13 declaration_specifiers: type_qualifier .

    $default  reduce using rule 13 (declaration_specifiers)


State 8

    5 function_definition: INT ID . '(' ')' compound_statement

    '('  shift, and go to state 17


State 9

    0 $accept: translation_unit $end .

    $default  accept


State 10

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


State 11

   20 direct_declarator: ID .

    $default  reduce using rule 20 (direct_declarator)


State 12

   21 direct_declarator: '(' . declarator ')'

    ID   shift, and go to state 11
    '('  shift, and go to state 12

    declarator         go to state 18
    direct_declarator  go to state 16


State 13

   12 declaration: declaration_specifiers init_declarator_list . ';'
   16 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  shift, and go to state 19
    ','  shift, and go to state 20


State 14

   15 init_declarator_list: init_declarator .

    $default  reduce using rule 15 (init_declarator_list)


State 15

   17 init_declarator: declarator .
   18                | declarator . '=' initializer

    '='  shift, and go to state 21

    $default  reduce using rule 17 (init_declarator)


State 16

   19 declarator: direct_declarator .

    $default  reduce using rule 19 (declarator)


State 17

    5 function_definition: INT ID '(' . ')' compound_statement

    ')'  shift, and go to state 22


State 18

   21 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 23


State 19

   12 declaration: declaration_specifiers init_declarator_list ';' .

    $default  reduce using rule 12 (declaration)


State 20

   16 init_declarator_list: init_declarator_list ',' . init_declarator

    ID   shift, and go to state 11
    '('  shift, and go to state 12

    init_declarator    go to state 24
    declarator         go to state 15
    direct_declarator  go to state 16


State 21

   18 init_declarator: declarator '=' . initializer

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    initializer                go to state 32
    assignment_expression      go to state 33
    conditional_expression     go to state 34
    logical_or_expression      go to state 35
    logical_and_expression     go to state 36
    inclusive_or_expression    go to state 37
    exclusive_or_expression    go to state 38
    and_expression             go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 22

    5 function_definition: INT ID '(' ')' . compound_statement

    '{'  shift, and go to state 48

    compound_statement  go to state 49


State 23

   21 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 21 (direct_declarator)


State 24

   16 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 16 (init_declarator_list)


State 25

   66 primary_expression: ICONSTANT .

    $default  reduce using rule 66 (primary_expression)


State 26

   68 primary_expression: ID .

    $default  reduce using rule 68 (primary_expression)


State 27

   67 primary_expression: '(' . expression ')'

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    expression                 go to state 50
    assignment_expression      go to state 51
    conditional_expression     go to state 34
    logical_or_expression      go to state 35
    logical_and_expression     go to state 36
    inclusive_or_expression    go to state 37
    exclusive_or_expression    go to state 38
    and_expression             go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 28

   61 unary_expression: '+' . cast_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    cast_expression     go to state 52
    unary_expression    go to state 53
    postfix_expression  go to state 46
    primary_expression  go to state 47


State 29

   62 unary_expression: '-' . cast_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    cast_expression     go to state 54
    unary_expression    go to state 53
    postfix_expression  go to state 46
    primary_expression  go to state 47


State 30

   63 unary_expression: '~' . cast_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    cast_expression     go to state 55
    unary_expression    go to state 53
    postfix_expression  go to state 46
    primary_expression  go to state 47


State 31

   64 unary_expression: '!' . cast_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    cast_expression     go to state 56
    unary_expression    go to state 53
    postfix_expression  go to state 46
    primary_expression  go to state 47


State 32

   18 init_declarator: declarator '=' initializer .

    $default  reduce using rule 18 (init_declarator)


State 33

   22 initializer: assignment_expression .

    $default  reduce using rule 22 (initializer)


State 34

   28 assignment_expression: conditional_expression .

    $default  reduce using rule 28 (assignment_expression)


State 35

   29 conditional_expression: logical_or_expression .
   30                       | logical_or_expression . '?' expression ':' conditional_expression
   32 logical_or_expression: logical_or_expression . LOR logical_and_expression

    LOR  shift, and go to state 57
    '?'  shift, and go to state 58

    $default  reduce using rule 29 (conditional_expression)


State 36

   31 logical_or_expression: logical_and_expression .
   34 logical_and_expression: logical_and_expression . LAND inclusive_or_expression

    LAND  shift, and go to state 59

    $default  reduce using rule 31 (logical_or_expression)


State 37

   33 logical_and_expression: inclusive_or_expression .
   36 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 60

    $default  reduce using rule 33 (logical_and_expression)


State 38

   35 inclusive_or_expression: exclusive_or_expression .
   38 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 61

    $default  reduce using rule 35 (inclusive_or_expression)


State 39

   37 exclusive_or_expression: and_expression .
   40 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 62

    $default  reduce using rule 37 (exclusive_or_expression)


State 40

   39 and_expression: equality_expression .
   42 equality_expression: equality_expression . EQ relational_expression
   43                    | equality_expression . NE relational_expression

    NE  shift, and go to state 63
    EQ  shift, and go to state 64

    $default  reduce using rule 39 (and_expression)


State 41

   41 equality_expression: relational_expression .
   45 relational_expression: relational_expression . '<' shift_expression
   46                      | relational_expression . '>' shift_expression
   47                      | relational_expression . LE shift_expression
   48                      | relational_expression . GE shift_expression

    LE   shift, and go to state 65
    GE   shift, and go to state 66
    '<'  shift, and go to state 67
    '>'  shift, and go to state 68

    $default  reduce using rule 41 (equality_expression)


State 42

   44 relational_expression: shift_expression .
   50 shift_expression: shift_expression . SHL additive_expression
   51                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 69
    SHR  shift, and go to state 70

    $default  reduce using rule 44 (relational_expression)


State 43

   49 shift_expression: additive_expression .
   53 additive_expression: additive_expression . '+' multiplicative_expression
   54                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72

    $default  reduce using rule 49 (shift_expression)


State 44

   52 additive_expression: multiplicative_expression .
   56 multiplicative_expression: multiplicative_expression . '*' unary_expression
   57                          | multiplicative_expression . '/' unary_expression
   58                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 52 (additive_expression)


State 45

   55 multiplicative_expression: unary_expression .

    $default  reduce using rule 55 (multiplicative_expression)


State 46

   60 unary_expression: postfix_expression .

    $default  reduce using rule 60 (unary_expression)


State 47

   65 postfix_expression: primary_expression .

    $default  reduce using rule 65 (postfix_expression)


State 48

    6 compound_statement: '{' . '}'
    7                   | '{' . block_item_list '}'

    INT     shift, and go to state 76
    RETURN  shift, and go to state 77
    '{'     shift, and go to state 48
    '}'     shift, and go to state 78

    compound_statement      go to state 79
    block_item_list         go to state 80
    block_item              go to state 81
    declaration             go to state 82
    declaration_specifiers  go to state 6
    type_qualifier          go to state 7
    statement               go to state 83
    jump_statement          go to state 84


State 49

    5 function_definition: INT ID '(' ')' compound_statement .

    $default  reduce using rule 5 (function_definition)


State 50

   27 expression: expression . ',' assignment_expression
   67 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 85
    ','  shift, and go to state 86


State 51

   26 expression: assignment_expression .

    $default  reduce using rule 26 (expression)


State 52

   61 unary_expression: '+' cast_expression .

    $default  reduce using rule 61 (unary_expression)


State 53

   59 cast_expression: unary_expression .

    $default  reduce using rule 59 (cast_expression)


State 54

   62 unary_expression: '-' cast_expression .

    $default  reduce using rule 62 (unary_expression)


State 55

   63 unary_expression: '~' cast_expression .

    $default  reduce using rule 63 (unary_expression)


State 56

   64 unary_expression: '!' cast_expression .

    $default  reduce using rule 64 (unary_expression)


State 57

   32 logical_or_expression: logical_or_expression LOR . logical_and_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    logical_and_expression     go to state 87
    inclusive_or_expression    go to state 37
    exclusive_or_expression    go to state 38
    and_expression             go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 58

   30 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    expression                 go to state 88
    assignment_expression      go to state 51
    conditional_expression     go to state 34
    logical_or_expression      go to state 35
    logical_and_expression     go to state 36
    inclusive_or_expression    go to state 37
    exclusive_or_expression    go to state 38
    and_expression             go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 59

   34 logical_and_expression: logical_and_expression LAND . inclusive_or_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    inclusive_or_expression    go to state 89
    exclusive_or_expression    go to state 38
    and_expression             go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 60

   36 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    exclusive_or_expression    go to state 90
    and_expression             go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 61

   38 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    and_expression             go to state 91
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 62

   40 and_expression: and_expression '&' . equality_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    equality_expression        go to state 92
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 63

   43 equality_expression: equality_expression NE . relational_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    relational_expression      go to state 93
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 64

   42 equality_expression: equality_expression EQ . relational_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    relational_expression      go to state 94
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 65

   47 relational_expression: relational_expression LE . shift_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    shift_expression           go to state 95
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 66

   48 relational_expression: relational_expression GE . shift_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    shift_expression           go to state 96
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 67

   45 relational_expression: relational_expression '<' . shift_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    shift_expression           go to state 97
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 68

   46 relational_expression: relational_expression '>' . shift_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    shift_expression           go to state 98
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 69

   50 shift_expression: shift_expression SHL . additive_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    additive_expression        go to state 99
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 70

   51 shift_expression: shift_expression SHR . additive_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    additive_expression        go to state 100
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 71

   53 additive_expression: additive_expression '+' . multiplicative_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    multiplicative_expression  go to state 101
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 72

   54 additive_expression: additive_expression '-' . multiplicative_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    multiplicative_expression  go to state 102
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 73

   56 multiplicative_expression: multiplicative_expression '*' . unary_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    unary_expression    go to state 103
    postfix_expression  go to state 46
    primary_expression  go to state 47


State 74

   57 multiplicative_expression: multiplicative_expression '/' . unary_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    unary_expression    go to state 104
    postfix_expression  go to state 46
    primary_expression  go to state 47


State 75

   58 multiplicative_expression: multiplicative_expression '%' . unary_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    unary_expression    go to state 105
    postfix_expression  go to state 46
    primary_expression  go to state 47


State 76

   14 type_qualifier: INT .

    $default  reduce using rule 14 (type_qualifier)


State 77

   25 jump_statement: RETURN . expression ';'

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    expression                 go to state 106
    assignment_expression      go to state 51
    conditional_expression     go to state 34
    logical_or_expression      go to state 35
    logical_and_expression     go to state 36
    inclusive_or_expression    go to state 37
    exclusive_or_expression    go to state 38
    and_expression             go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 78

    6 compound_statement: '{' '}' .

    $default  reduce using rule 6 (compound_statement)


State 79

   24 statement: compound_statement .

    $default  reduce using rule 24 (statement)


State 80

    7 compound_statement: '{' block_item_list . '}'
    9 block_item_list: block_item_list . block_item

    INT     shift, and go to state 76
    RETURN  shift, and go to state 77
    '{'     shift, and go to state 48
    '}'     shift, and go to state 107

    compound_statement      go to state 79
    block_item              go to state 108
    declaration             go to state 82
    declaration_specifiers  go to state 6
    type_qualifier          go to state 7
    statement               go to state 83
    jump_statement          go to state 84


State 81

    8 block_item_list: block_item .

    $default  reduce using rule 8 (block_item_list)


State 82

   10 block_item: declaration .

    $default  reduce using rule 10 (block_item)


State 83

   11 block_item: statement .

    $default  reduce using rule 11 (block_item)


State 84

   23 statement: jump_statement .

    $default  reduce using rule 23 (statement)


State 85

   67 primary_expression: '(' expression ')' .

    $default  reduce using rule 67 (primary_expression)


State 86

   27 expression: expression ',' . assignment_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    assignment_expression      go to state 109
    conditional_expression     go to state 34
    logical_or_expression      go to state 35
    logical_and_expression     go to state 36
    inclusive_or_expression    go to state 37
    exclusive_or_expression    go to state 38
    and_expression             go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 87

   32 logical_or_expression: logical_or_expression LOR logical_and_expression .
   34 logical_and_expression: logical_and_expression . LAND inclusive_or_expression

    LAND  shift, and go to state 59

    $default  reduce using rule 32 (logical_or_expression)


State 88

   27 expression: expression . ',' assignment_expression
   30 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ','  shift, and go to state 86
    ':'  shift, and go to state 110


State 89

   34 logical_and_expression: logical_and_expression LAND inclusive_or_expression .
   36 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 60

    $default  reduce using rule 34 (logical_and_expression)


State 90

   36 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
   38 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 61

    $default  reduce using rule 36 (inclusive_or_expression)


State 91

   38 exclusive_or_expression: exclusive_or_expression '^' and_expression .
   40 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 62

    $default  reduce using rule 38 (exclusive_or_expression)


State 92

   40 and_expression: and_expression '&' equality_expression .
   42 equality_expression: equality_expression . EQ relational_expression
   43                    | equality_expression . NE relational_expression

    NE  shift, and go to state 63
    EQ  shift, and go to state 64

    $default  reduce using rule 40 (and_expression)


State 93

   43 equality_expression: equality_expression NE relational_expression .
   45 relational_expression: relational_expression . '<' shift_expression
   46                      | relational_expression . '>' shift_expression
   47                      | relational_expression . LE shift_expression
   48                      | relational_expression . GE shift_expression

    LE   shift, and go to state 65
    GE   shift, and go to state 66
    '<'  shift, and go to state 67
    '>'  shift, and go to state 68

    $default  reduce using rule 43 (equality_expression)


State 94

   42 equality_expression: equality_expression EQ relational_expression .
   45 relational_expression: relational_expression . '<' shift_expression
   46                      | relational_expression . '>' shift_expression
   47                      | relational_expression . LE shift_expression
   48                      | relational_expression . GE shift_expression

    LE   shift, and go to state 65
    GE   shift, and go to state 66
    '<'  shift, and go to state 67
    '>'  shift, and go to state 68

    $default  reduce using rule 42 (equality_expression)


State 95

   47 relational_expression: relational_expression LE shift_expression .
   50 shift_expression: shift_expression . SHL additive_expression
   51                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 69
    SHR  shift, and go to state 70

    $default  reduce using rule 47 (relational_expression)


State 96

   48 relational_expression: relational_expression GE shift_expression .
   50 shift_expression: shift_expression . SHL additive_expression
   51                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 69
    SHR  shift, and go to state 70

    $default  reduce using rule 48 (relational_expression)


State 97

   45 relational_expression: relational_expression '<' shift_expression .
   50 shift_expression: shift_expression . SHL additive_expression
   51                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 69
    SHR  shift, and go to state 70

    $default  reduce using rule 45 (relational_expression)


State 98

   46 relational_expression: relational_expression '>' shift_expression .
   50 shift_expression: shift_expression . SHL additive_expression
   51                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 69
    SHR  shift, and go to state 70

    $default  reduce using rule 46 (relational_expression)


State 99

   50 shift_expression: shift_expression SHL additive_expression .
   53 additive_expression: additive_expression . '+' multiplicative_expression
   54                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72

    $default  reduce using rule 50 (shift_expression)


State 100

   51 shift_expression: shift_expression SHR additive_expression .
   53 additive_expression: additive_expression . '+' multiplicative_expression
   54                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72

    $default  reduce using rule 51 (shift_expression)


State 101

   53 additive_expression: additive_expression '+' multiplicative_expression .
   56 multiplicative_expression: multiplicative_expression . '*' unary_expression
   57                          | multiplicative_expression . '/' unary_expression
   58                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 53 (additive_expression)


State 102

   54 additive_expression: additive_expression '-' multiplicative_expression .
   56 multiplicative_expression: multiplicative_expression . '*' unary_expression
   57                          | multiplicative_expression . '/' unary_expression
   58                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 54 (additive_expression)


State 103

   56 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 56 (multiplicative_expression)


State 104

   57 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 57 (multiplicative_expression)


State 105

   58 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 58 (multiplicative_expression)


State 106

   25 jump_statement: RETURN expression . ';'
   27 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 111
    ','  shift, and go to state 86


State 107

    7 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 7 (compound_statement)


State 108

    9 block_item_list: block_item_list block_item .

    $default  reduce using rule 9 (block_item_list)


State 109

   27 expression: expression ',' assignment_expression .

    $default  reduce using rule 27 (expression)


State 110

   30 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    ICONSTANT  shift, and go to state 25
    ID         shift, and go to state 26
    '('        shift, and go to state 27
    '+'        shift, and go to state 28
    '-'        shift, and go to state 29
    '~'        shift, and go to state 30
    '!'        shift, and go to state 31

    conditional_expression     go to state 112
    logical_or_expression      go to state 35
    logical_and_expression     go to state 36
    inclusive_or_expression    go to state 37
    exclusive_or_expression    go to state 38
    and_expression             go to state 39
    equality_expression        go to state 40
    relational_expression      go to state 41
    shift_expression           go to state 42
    additive_expression        go to state 43
    multiplicative_expression  go to state 44
    unary_expression           go to state 45
    postfix_expression         go to state 46
    primary_expression         go to state 47


State 111

   25 jump_statement: RETURN expression ';' .

    $default  reduce using rule 25 (jump_statement)


State 112

   30 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 30 (conditional_expression)
